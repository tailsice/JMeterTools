<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="COSA.VERSION" elementType="Argument">
            <stringProp name="Argument.name">COSA.VERSION</stringProp>
            <stringProp name="Argument.value">${__P(COSA.VERSION,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">COSA.PROTOCOL</stringProp>
            <stringProp name="Argument.value">${__P(COSA.PROTOCOL,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.HOST" elementType="Argument">
            <stringProp name="Argument.name">COSA.HOST</stringProp>
            <stringProp name="Argument.value">${__P(COSA.HOST,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.USER.NAME" elementType="Argument">
            <stringProp name="Argument.name">COSA.USER.NAME</stringProp>
            <stringProp name="Argument.value">${__P(COSA.USER.NAME,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.USER.PASS" elementType="Argument">
            <stringProp name="Argument.name">COSA.USER.PASS</stringProp>
            <stringProp name="Argument.value">${__P(COSA.USER.PASS,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.LOOPS" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.LOOPS</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.LOOPS,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.PORT" elementType="Argument">
            <stringProp name="Argument.name">COSA.PORT</stringProp>
            <stringProp name="Argument.value">${__P(COSA.PORT,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.TIMER.MS" elementType="Argument">
            <stringProp name="Argument.name">COSA.TIMER.MS</stringProp>
            <stringProp name="Argument.value">${__P(COSA.TIMER.MS,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH.1B" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH.1B</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH.1B,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH.1KB" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH.1KB</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH.1KB,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH.10KB" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH.10KB</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH.10KB,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH.100KB" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH.100KB</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH.100KB,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH.1MB" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH.1MB</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH.1MB,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH.10MB" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH.10MB</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH.10MB,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH.100MB" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH.100MB</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH.100MB,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.THREAD.LOOPS" elementType="Argument">
            <stringProp name="Argument.name">COSA.THREAD.LOOPS</stringProp>
            <stringProp name="Argument.value">${__P(COSA.THREAD.LOOPS,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="overwrite properties" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="COSA.PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">COSA.PROTOCOL</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.PORT" elementType="Argument">
            <stringProp name="Argument.name">COSA.PORT</stringProp>
            <stringProp name="Argument.value">8001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.HOST" elementType="Argument">
            <stringProp name="Argument.name">COSA.HOST</stringProp>
            <stringProp name="Argument.value">140.92.25.32</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.LOOPS" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.LOOPS</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH</stringProp>
            <stringProp name="Argument.value">/home/jmeter/Desktop/jmeter-working-dir/workloads/Nasuni/txt/1KB/1KB-0.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="set COSA.v?.THREADS" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="COSA.v1.THREADS" elementType="Argument">
            <stringProp name="Argument.name">COSA.v1.THREADS</stringProp>
            <stringProp name="Argument.value">${__javaScript( ${COSA.VERSION}==1 ? 1 : 0 ; )}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.v2.THREADS" elementType="Argument">
            <stringProp name="Argument.name">COSA.v2.THREADS</stringProp>
            <stringProp name="Argument.value">${__javaScript( ${COSA.VERSION}==2 ? 1 : 0 ; )}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
      </CacheManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${COSA.HOST}</stringProp>
        <stringProp name="HTTPSampler.port">${COSA.PORT}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">${COSA.PROTOCOL}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="preprocess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1395219134000</longProp>
        <longProp name="ThreadGroup.end_time">1395219134000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="remove ana-api-chain.log*" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/ana-api-chain.log.cleaner</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory"></stringProp>
        </SystemSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="main" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${COSA.THREAD.LOOPS}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${COSA.v1.THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1381978890000</longProp>
        <longProp name="ThreadGroup.end_time">1381978890000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">${COSA.TIMER.MS}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean ana-api-chain.log" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cat</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/dev/null</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory"></stringProp>
          <stringProp name="SystemSampler.stdout">/tmp/ana-api-chain.log</stringProp>
        </SystemSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="user login" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
          <hashTree>
            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="Argument">
                    <stringProp name="Argument.name"></stringProp>
                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="SystemSampler.directory"></stringProp>
            </SystemSampler>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">u</stringProp>
                  <stringProp name="Argument.value">${FORM.u}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pw</stringProp>
                  <stringProp name="Argument.value">${FORM.pw}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dologin.jsp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${COSA.HOST}</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                </elementProp>
                <elementProp name="Accept-Charset" elementType="Header">
                  <stringProp name="Header.name">Accept-Charset</stringProp>
                  <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${COSA.HOST}/login.jsp</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="2079517131">FORM.u</stringProp>
                <stringProp name="40521585">FORM.pw</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="129724843">
                  <stringProp name="1836088428">${COSA.USER.NAME}</stringProp>
                  <stringProp name="1837941670">${COSA.USER.PASS}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
              <stringProp name="JSON_PATH">$.statuscode</stringProp>
              <stringProp name="EXPECTED_VALUE">200</stringProp>
              <boolProp name="JSONVALIDATION">true</boolProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
            <hashTree/>
            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.TICKET" enabled="true">
              <stringProp name="VAR">COSA.TICKET</stringProp>
              <stringProp name="JSONPATH">$.ticket</stringProp>
            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if login ok" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
            <hashTree>
              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="Argument">
                      <stringProp name="Argument.name"></stringProp>
                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="SystemSampler.directory"></stringProp>
              </SystemSampler>
              <hashTree/>
              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="SystemSampler.directory"></stringProp>
              </SystemSampler>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="get profile" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
              <hashTree>
                <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                  <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                  <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                  <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                  <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="Argument">
                        <stringProp name="Argument.name"></stringProp>
                        <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="SystemSampler.directory"></stringProp>
                </SystemSampler>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get profile" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/restful/services/person/${QUERY.user}?alf_ticket=${QUERY.ticket}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="302263633">QUERY.user</stringProp>
                    <stringProp name="-1620352238">QUERY.ticket</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="142473370">
                      <stringProp name="1836088428">${COSA.USER.NAME}</stringProp>
                      <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                  <stringProp name="JSON_PATH">$.statuscode</stringProp>
                  <stringProp name="EXPECTED_VALUE">200</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.ROOTUID" enabled="true">
                  <stringProp name="VAR">COSA.ROOTUID</stringProp>
                  <stringProp name="JSONPATH">$.homeFolderNodeRef</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="set COSA.ROOTUID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">COSA.ROOTUID</stringProp>
                  <stringProp name="RegexExtractor.regex">([^/]*)$</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                  <stringProp name="Sample.scope">variable</stringProp>
                  <stringProp name="Scope.variable">COSA.ROOTUID</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if get profile ok" enabled="true">
                <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                <hashTree>
                  <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                    <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                    <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                    <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                    <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="Argument">
                          <stringProp name="Argument.name"></stringProp>
                          <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="SystemSampler.directory"></stringProp>
                  </SystemSampler>
                  <hashTree/>
                  <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                    <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                    <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                    <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                    <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="SystemSampler.directory"></stringProp>
                  </SystemSampler>
                  <hashTree/>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="specified file loop" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${COSA.UPLOAD.LOOPS}</stringProp>
                </LoopController>
                <hashTree>
                  <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                    <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,props.get(&quot;COSA.UPLOAD.FILE.PATH&quot;));</stringProp>
                    <stringProp name="BeanShellSampler.filename"></stringProp>
                    <stringProp name="BeanShellSampler.parameters"></stringProp>
                    <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                  </BeanShellSampler>
                  <hashTree/>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                  <hashTree>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                    <hashTree>
                      <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                        <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                        <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                        <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                        <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="Argument">
                              <stringProp name="Argument.name"></stringProp>
                              <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="SystemSampler.directory"></stringProp>
                      </SystemSampler>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">uploadFileDesc</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                      <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                        <collectionProp name="HTTPFileArgs.files">
                          <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                            <stringProp name="File.path">${FORM.file}</stringProp>
                            <stringProp name="File.paramname">file</stringProp>
                            <stringProp name="File.mimetype"></stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-689204022">
                            <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="286229606">FORM.file</stringProp>
                          <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="1922021930">
                            <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                            <stringProp name="86836">Web</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                        <stringProp name="JSON_PATH">$.statuscode</stringProp>
                        <stringProp name="EXPECTED_VALUE">200</stringProp>
                        <boolProp name="JSONVALIDATION">true</boolProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                        <stringProp name="VAR">COSA.OBJUID</stringProp>
                        <stringProp name="JSONPATH">$.uuid</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                      <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                        <stringProp name="filename"></stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                        <stringProp name="scriptLanguage">javascript</stringProp>
                      </BSFPostProcessor>
                      <hashTree/>
                      <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                        <stringProp name="filename"></stringProp>
                        <stringProp name="parameters"></stringProp>
                        <boolProp name="resetInterpreter">false</boolProp>
                        <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                      </BeanShellPostProcessor>
                      <hashTree/>
                    </hashTree>
                    <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                      <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                      <boolProp name="IfController.evaluateAll">false</boolProp>
                    </IfController>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value"></stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain"></stringProp>
                          <stringProp name="HTTPSampler.port"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          <stringProp name="HTTPSampler.protocol"></stringProp>
                          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                          <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                          <stringProp name="HTTPSampler.method">GET</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <boolProp name="HTTPSampler.monitor">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                            <collectionProp name="UserParameters.names">
                              <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              <stringProp name="-759393436">QUERY.file.uid</stringProp>
                              <stringProp name="-2066575881">QUERY.file.name</stringProp>
                            </collectionProp>
                            <collectionProp name="UserParameters.thread_values">
                              <collectionProp name="-1969399674">
                                <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                              </collectionProp>
                            </collectionProp>
                            <boolProp name="UserParameters.per_iteration">false</boolProp>
                          </UserParameters>
                          <hashTree/>
                          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                            <stringProp name="filename"></stringProp>
                            <stringProp name="parameters"></stringProp>
                            <boolProp name="resetInterpreter">false</boolProp>
                            <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                          </BeanShellPostProcessor>
                          <hashTree/>
                        </hashTree>
                        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                          <boolProp name="IfController.evaluateAll">false</boolProp>
                        </IfController>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="HTTPArgument">
                                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain"></stringProp>
                          <stringProp name="HTTPSampler.port"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                          <stringProp name="HTTPSampler.protocol"></stringProp>
                          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                          <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                          <stringProp name="HTTPSampler.method">POST</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <boolProp name="HTTPSampler.monitor">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                            <collectionProp name="UserParameters.names">
                              <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            </collectionProp>
                            <collectionProp name="UserParameters.thread_values">
                              <collectionProp name="928949649">
                                <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              </collectionProp>
                            </collectionProp>
                            <boolProp name="UserParameters.per_iteration">false</boolProp>
                          </UserParameters>
                          <hashTree/>
                          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                            <collectionProp name="UserParameters.names">
                              <stringProp name="818845227">JSON.nodes</stringProp>
                            </collectionProp>
                            <collectionProp name="UserParameters.thread_values">
                              <collectionProp name="-2071432180">
                                <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                              </collectionProp>
                            </collectionProp>
                            <boolProp name="UserParameters.per_iteration">false</boolProp>
                          </UserParameters>
                          <hashTree/>
                          <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                            <stringProp name="JSON_PATH">$.statuscode</stringProp>
                            <stringProp name="EXPECTED_VALUE">200</stringProp>
                            <boolProp name="JSONVALIDATION">true</boolProp>
                          </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                          <hashTree/>
                          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                            <stringProp name="filename"></stringProp>
                            <stringProp name="parameters"></stringProp>
                            <boolProp name="resetInterpreter">false</boolProp>
                            <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                          </BeanShellPostProcessor>
                          <hashTree/>
                        </hashTree>
                        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                          <boolProp name="IfController.evaluateAll">false</boolProp>
                        </IfController>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="benchmark file loop" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">${COSA.UPLOAD.LOOPS}</stringProp>
                </LoopController>
                <hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1B" enabled="true"/>
                  <hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,vars.get(&quot;COSA.UPLOAD.FILE.PATH.1B&quot;));</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">uploadFileDesc</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                        <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                          <collectionProp name="HTTPFileArgs.files">
                            <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                              <stringProp name="File.path">${FORM.file}</stringProp>
                              <stringProp name="File.paramname">file</stringProp>
                              <stringProp name="File.mimetype"></stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="-689204022">
                              <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="286229606">FORM.file</stringProp>
                            <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="1922021930">
                              <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                              <stringProp name="86836">Web</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                          <stringProp name="JSON_PATH">$.statuscode</stringProp>
                          <stringProp name="EXPECTED_VALUE">200</stringProp>
                          <boolProp name="JSONVALIDATION">true</boolProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                          <stringProp name="VAR">COSA.OBJUID</stringProp>
                          <stringProp name="JSONPATH">$.uuid</stringProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                        <hashTree/>
                        <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                          <stringProp name="scriptLanguage">javascript</stringProp>
                        </BSFPostProcessor>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                        <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value"></stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                                <stringProp name="-759393436">QUERY.file.uid</stringProp>
                                <stringProp name="-2066575881">QUERY.file.name</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-1969399674">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                  <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                  <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="928949649">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="818845227">JSON.nodes</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2071432180">
                                  <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                              <stringProp name="JSON_PATH">$.statuscode</stringProp>
                              <stringProp name="EXPECTED_VALUE">200</stringProp>
                              <boolProp name="JSONVALIDATION">true</boolProp>
                            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1KB" enabled="true"/>
                  <hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,vars.get(&quot;COSA.UPLOAD.FILE.PATH.1KB&quot;));</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">uploadFileDesc</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                        <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                          <collectionProp name="HTTPFileArgs.files">
                            <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                              <stringProp name="File.path">${FORM.file}</stringProp>
                              <stringProp name="File.paramname">file</stringProp>
                              <stringProp name="File.mimetype"></stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="-689204022">
                              <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="286229606">FORM.file</stringProp>
                            <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="1922021930">
                              <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                              <stringProp name="86836">Web</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                          <stringProp name="JSON_PATH">$.statuscode</stringProp>
                          <stringProp name="EXPECTED_VALUE">200</stringProp>
                          <boolProp name="JSONVALIDATION">true</boolProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                          <stringProp name="VAR">COSA.OBJUID</stringProp>
                          <stringProp name="JSONPATH">$.uuid</stringProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                        <hashTree/>
                        <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                          <stringProp name="scriptLanguage">javascript</stringProp>
                        </BSFPostProcessor>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                        <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value"></stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                                <stringProp name="-759393436">QUERY.file.uid</stringProp>
                                <stringProp name="-2066575881">QUERY.file.name</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-1969399674">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                  <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                  <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="928949649">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="818845227">JSON.nodes</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2071432180">
                                  <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                              <stringProp name="JSON_PATH">$.statuscode</stringProp>
                              <stringProp name="EXPECTED_VALUE">200</stringProp>
                              <boolProp name="JSONVALIDATION">true</boolProp>
                            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="10KB" enabled="true"/>
                  <hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,vars.get(&quot;COSA.UPLOAD.FILE.PATH.10KB&quot;));</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">uploadFileDesc</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                        <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                          <collectionProp name="HTTPFileArgs.files">
                            <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                              <stringProp name="File.path">${FORM.file}</stringProp>
                              <stringProp name="File.paramname">file</stringProp>
                              <stringProp name="File.mimetype"></stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="-689204022">
                              <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="286229606">FORM.file</stringProp>
                            <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="1922021930">
                              <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                              <stringProp name="86836">Web</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                          <stringProp name="JSON_PATH">$.statuscode</stringProp>
                          <stringProp name="EXPECTED_VALUE">200</stringProp>
                          <boolProp name="JSONVALIDATION">true</boolProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                          <stringProp name="VAR">COSA.OBJUID</stringProp>
                          <stringProp name="JSONPATH">$.uuid</stringProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                        <hashTree/>
                        <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                          <stringProp name="scriptLanguage">javascript</stringProp>
                        </BSFPostProcessor>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                        <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value"></stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                                <stringProp name="-759393436">QUERY.file.uid</stringProp>
                                <stringProp name="-2066575881">QUERY.file.name</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-1969399674">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                  <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                  <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="928949649">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="818845227">JSON.nodes</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2071432180">
                                  <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                              <stringProp name="JSON_PATH">$.statuscode</stringProp>
                              <stringProp name="EXPECTED_VALUE">200</stringProp>
                              <boolProp name="JSONVALIDATION">true</boolProp>
                            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="100KB" enabled="true"/>
                  <hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,vars.get(&quot;COSA.UPLOAD.FILE.PATH.100KB&quot;));</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">uploadFileDesc</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                        <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                          <collectionProp name="HTTPFileArgs.files">
                            <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                              <stringProp name="File.path">${FORM.file}</stringProp>
                              <stringProp name="File.paramname">file</stringProp>
                              <stringProp name="File.mimetype"></stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="-689204022">
                              <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="286229606">FORM.file</stringProp>
                            <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="1922021930">
                              <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                              <stringProp name="86836">Web</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                          <stringProp name="JSON_PATH">$.statuscode</stringProp>
                          <stringProp name="EXPECTED_VALUE">200</stringProp>
                          <boolProp name="JSONVALIDATION">true</boolProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                          <stringProp name="VAR">COSA.OBJUID</stringProp>
                          <stringProp name="JSONPATH">$.uuid</stringProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                        <hashTree/>
                        <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                          <stringProp name="scriptLanguage">javascript</stringProp>
                        </BSFPostProcessor>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                        <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value"></stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                                <stringProp name="-759393436">QUERY.file.uid</stringProp>
                                <stringProp name="-2066575881">QUERY.file.name</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-1969399674">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                  <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                  <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="928949649">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="818845227">JSON.nodes</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2071432180">
                                  <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                              <stringProp name="JSON_PATH">$.statuscode</stringProp>
                              <stringProp name="EXPECTED_VALUE">200</stringProp>
                              <boolProp name="JSONVALIDATION">true</boolProp>
                            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1MB" enabled="true"/>
                  <hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,vars.get(&quot;COSA.UPLOAD.FILE.PATH.1MB&quot;));</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">uploadFileDesc</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                        <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                          <collectionProp name="HTTPFileArgs.files">
                            <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                              <stringProp name="File.path">${FORM.file}</stringProp>
                              <stringProp name="File.paramname">file</stringProp>
                              <stringProp name="File.mimetype"></stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="-689204022">
                              <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="286229606">FORM.file</stringProp>
                            <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="1922021930">
                              <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                              <stringProp name="86836">Web</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                          <stringProp name="JSON_PATH">$.statuscode</stringProp>
                          <stringProp name="EXPECTED_VALUE">200</stringProp>
                          <boolProp name="JSONVALIDATION">true</boolProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                          <stringProp name="VAR">COSA.OBJUID</stringProp>
                          <stringProp name="JSONPATH">$.uuid</stringProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                        <hashTree/>
                        <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                          <stringProp name="scriptLanguage">javascript</stringProp>
                        </BSFPostProcessor>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                        <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value"></stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                                <stringProp name="-759393436">QUERY.file.uid</stringProp>
                                <stringProp name="-2066575881">QUERY.file.name</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-1969399674">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                  <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                  <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="928949649">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="818845227">JSON.nodes</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2071432180">
                                  <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                              <stringProp name="JSON_PATH">$.statuscode</stringProp>
                              <stringProp name="EXPECTED_VALUE">200</stringProp>
                              <boolProp name="JSONVALIDATION">true</boolProp>
                            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="10MB" enabled="true"/>
                  <hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,vars.get(&quot;COSA.UPLOAD.FILE.PATH.10MB&quot;));</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">uploadFileDesc</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                        <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                          <collectionProp name="HTTPFileArgs.files">
                            <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                              <stringProp name="File.path">${FORM.file}</stringProp>
                              <stringProp name="File.paramname">file</stringProp>
                              <stringProp name="File.mimetype"></stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="-689204022">
                              <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="286229606">FORM.file</stringProp>
                            <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="1922021930">
                              <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                              <stringProp name="86836">Web</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                          <stringProp name="JSON_PATH">$.statuscode</stringProp>
                          <stringProp name="EXPECTED_VALUE">200</stringProp>
                          <boolProp name="JSONVALIDATION">true</boolProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                          <stringProp name="VAR">COSA.OBJUID</stringProp>
                          <stringProp name="JSONPATH">$.uuid</stringProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                        <hashTree/>
                        <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                          <stringProp name="scriptLanguage">javascript</stringProp>
                        </BSFPostProcessor>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                        <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value"></stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                                <stringProp name="-759393436">QUERY.file.uid</stringProp>
                                <stringProp name="-2066575881">QUERY.file.name</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-1969399674">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                  <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                  <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="928949649">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="818845227">JSON.nodes</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2071432180">
                                  <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                              <stringProp name="JSON_PATH">$.statuscode</stringProp>
                              <stringProp name="EXPECTED_VALUE">200</stringProp>
                              <boolProp name="JSONVALIDATION">true</boolProp>
                            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="100MB" enabled="true"/>
                  <hashTree>
                    <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="rewrite COSA.UPLOAD.FILE.PATH" enabled="true">
                      <stringProp name="BeanShellSampler.query">vars.put(&quot;COSA.UPLOAD.FILE.PATH&quot;,vars.get(&quot;COSA.UPLOAD.FILE.PATH.100MB&quot;));</stringProp>
                      <stringProp name="BeanShellSampler.filename"></stringProp>
                      <stringProp name="BeanShellSampler.parameters"></stringProp>
                      <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
                    </BeanShellSampler>
                    <hashTree/>
                    <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="specified file" enabled="true"/>
                    <hashTree>
                      <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                      <hashTree>
                        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments">
                              <elementProp name="" elementType="Argument">
                                <stringProp name="Argument.name"></stringProp>
                                <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                <stringProp name="Argument.metadata">=</stringProp>
                              </elementProp>
                            </collectionProp>
                          </elementProp>
                          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="SystemSampler.directory"></stringProp>
                        </SystemSampler>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="upload file" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">uploadFileDesc</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="HTTPSampler.protocol"></stringProp>
                        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                        <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                        <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                          <collectionProp name="HTTPFileArgs.files">
                            <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                              <stringProp name="File.path">${FORM.file}</stringProp>
                              <stringProp name="File.paramname">file</stringProp>
                              <stringProp name="File.mimetype"></stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <boolProp name="HTTPSampler.monitor">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="-1620352238">QUERY.ticket</stringProp>
                            <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="-689204022">
                              <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                              <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                          <collectionProp name="UserParameters.names">
                            <stringProp name="286229606">FORM.file</stringProp>
                            <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                          </collectionProp>
                          <collectionProp name="UserParameters.thread_values">
                            <collectionProp name="1922021930">
                              <stringProp name="1406451830">${COSA.UPLOAD.FILE.PATH}</stringProp>
                              <stringProp name="86836">Web</stringProp>
                            </collectionProp>
                          </collectionProp>
                          <boolProp name="UserParameters.per_iteration">false</boolProp>
                        </UserParameters>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                          <stringProp name="JSON_PATH">$.statuscode</stringProp>
                          <stringProp name="EXPECTED_VALUE">200</stringProp>
                          <boolProp name="JSONVALIDATION">true</boolProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                        <hashTree/>
                        <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                          <stringProp name="VAR">COSA.OBJUID</stringProp>
                          <stringProp name="JSONPATH">$.uuid</stringProp>
                        </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                        <hashTree/>
                        <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.UPLOAD.FILE.NAME" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <stringProp name="script">a=&quot;${COSA.UPLOAD.FILE.PATH}&quot;.split(&apos;\/&apos;);
vars.put(&quot;COSA.UPLOAD.FILE.NAME&quot;, a[a.length-1]);</stringProp>
                          <stringProp name="scriptLanguage">javascript</stringProp>
                        </BSFPostProcessor>
                        <hashTree/>
                        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                          <stringProp name="filename"></stringProp>
                          <stringProp name="parameters"></stringProp>
                          <boolProp name="resetInterpreter">false</boolProp>
                          <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                        </BeanShellPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if upload ok" enabled="true">
                        <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                        <boolProp name="IfController.evaluateAll">false</boolProp>
                      </IfController>
                      <hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                        <hashTree>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="Argument">
                                  <stringProp name="Argument.name"></stringProp>
                                  <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                          <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                            <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                            <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                            <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                            <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                              <collectionProp name="Arguments.arguments"/>
                            </elementProp>
                            <stringProp name="SystemSampler.directory"></stringProp>
                          </SystemSampler>
                          <hashTree/>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="download file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="download file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value"></stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/doclib/download/workspace/SpacesStore/${QUERY.file.uid}/${QUERY.file.name}?ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">GET</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                                <stringProp name="-759393436">QUERY.file.uid</stringProp>
                                <stringProp name="-2066575881">QUERY.file.name</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-1969399674">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                  <stringProp name="-1648196665">${COSA.OBJUID}</stringProp>
                                  <stringProp name="75878605">${__javaScript(encodeURI(vars.get(&quot;COSA.UPLOAD.FILE.NAME&quot;));)}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if download ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="delete file" enabled="true"/>
                        <hashTree>
                          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
                          <hashTree>
                            <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                              <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                              <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                              <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                              <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments">
                                  <elementProp name="" elementType="Argument">
                                    <stringProp name="Argument.name"></stringProp>
                                    <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                    <stringProp name="Argument.metadata">=</stringProp>
                                  </elementProp>
                                </collectionProp>
                              </elementProp>
                              <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                <collectionProp name="Arguments.arguments"/>
                              </elementProp>
                              <stringProp name="SystemSampler.directory"></stringProp>
                            </SystemSampler>
                            <hashTree/>
                          </hashTree>
                          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="delete file" enabled="true">
                            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                              <collectionProp name="Arguments.arguments">
                                <elementProp name="" elementType="HTTPArgument">
                                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                                  <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                                  <stringProp name="Argument.metadata">=</stringProp>
                                </elementProp>
                              </collectionProp>
                            </elementProp>
                            <stringProp name="HTTPSampler.domain"></stringProp>
                            <stringProp name="HTTPSampler.port"></stringProp>
                            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                            <stringProp name="HTTPSampler.response_timeout"></stringProp>
                            <stringProp name="HTTPSampler.protocol"></stringProp>
                            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                            <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                            <stringProp name="HTTPSampler.method">POST</stringProp>
                            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                            <boolProp name="HTTPSampler.monitor">false</boolProp>
                            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          </HTTPSamplerProxy>
                          <hashTree>
                            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                              <collectionProp name="HeaderManager.headers">
                                <elementProp name="" elementType="Header">
                                  <stringProp name="Header.name">Content-Type</stringProp>
                                  <stringProp name="Header.value">application/json</stringProp>
                                </elementProp>
                              </collectionProp>
                            </HeaderManager>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="-1620352238">QUERY.ticket</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="928949649">
                                  <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                              <collectionProp name="UserParameters.names">
                                <stringProp name="818845227">JSON.nodes</stringProp>
                              </collectionProp>
                              <collectionProp name="UserParameters.thread_values">
                                <collectionProp name="-2071432180">
                                  <stringProp name="267218137">&quot;${COSA.OBJUID}&quot;</stringProp>
                                </collectionProp>
                              </collectionProp>
                              <boolProp name="UserParameters.per_iteration">false</boolProp>
                            </UserParameters>
                            <hashTree/>
                            <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                              <stringProp name="JSON_PATH">$.statuscode</stringProp>
                              <stringProp name="EXPECTED_VALUE">200</stringProp>
                              <boolProp name="JSONVALIDATION">true</boolProp>
                            </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                            <hashTree/>
                            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                              <stringProp name="filename"></stringProp>
                              <stringProp name="parameters"></stringProp>
                              <boolProp name="resetInterpreter">false</boolProp>
                              <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot; &quot; + vars.get(&quot;COSA.UPLOAD.FILE.PATH&quot;) + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                            </BeanShellPostProcessor>
                            <hashTree/>
                          </hashTree>
                          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if delete ok" enabled="true">
                            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                            <boolProp name="IfController.evaluateAll">false</boolProp>
                          </IfController>
                          <hashTree>
                            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                            <hashTree>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments">
                                    <elementProp name="" elementType="Argument">
                                      <stringProp name="Argument.name"></stringProp>
                                      <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                                      <stringProp name="Argument.metadata">=</stringProp>
                                    </elementProp>
                                  </collectionProp>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                              <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                                <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                                <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                                <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                                <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                                  <collectionProp name="Arguments.arguments"/>
                                </elementProp>
                                <stringProp name="SystemSampler.directory"></stringProp>
                              </SystemSampler>
                              <hashTree/>
                            </hashTree>
                          </hashTree>
                        </hashTree>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="user logout" enabled="true"/>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="preprocess" enabled="true"/>
              <hashTree>
                <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="clean tomcat.debug.log" enabled="true">
                  <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                  <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                  <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.cleaner</stringProp>
                  <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="Argument">
                        <stringProp name="Argument.name"></stringProp>
                        <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="SystemSampler.directory"></stringProp>
                </SystemSampler>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="user logout" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/restful/auth/logout?ticket=${QUERY.ticket}</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="-1620352238">QUERY.ticket</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="928949649">
                      <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.gui.JSONPathAssertionGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion" testname="json statuscode 200" enabled="true">
                  <stringProp name="JSON_PATH">$.statuscode</stringProp>
                  <stringProp name="EXPECTED_VALUE">200</stringProp>
                  <boolProp name="JSONVALIDATION">true</boolProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathassertion.JSONPathAssertion>
                <hashTree/>
                <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="write ana-api-chain.log" enabled="true">
                  <stringProp name="filename"></stringProp>
                  <stringProp name="parameters"></stringProp>
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="script">import java.io.*;

FileWriter fw = new FileWriter(&quot;/tmp/ana-api-chain.log&quot;, true);
fw.append(&quot;JMETER LOG\n&quot;);

fw.append(&quot;Operation: &quot; + prev.getSampleLabel() + &quot;\n&quot;);
fw.append(&quot;Elapsed time: &quot; + prev.getTime() + &quot; ms @\n&quot;);
fw.append(&quot;Latency time: &quot; + prev.getLatency() + &quot; ms @\n&quot;);
fw.append(&quot;isSuccessful: &quot; + prev.isSuccessful() + &quot;\n&quot;);
fw.append(&quot;Response body size: &quot; + prev.getBodySize() + &quot; bytes @\n&quot;);
fw.append(&quot;Response headers size: &quot; + prev.getHeadersSize() + &quot; bytes @\n&quot;);
fw.append(&quot;API: &quot; + prev.getUrlAsString() + &quot;\n&quot;);
// fw.append(&quot;Start time: &quot; + prev.getStartTime() + &quot;\n&quot;);
// fw.append(&quot;End time: &quot; + prev.getEndTime() + &quot;\n&quot;);

fw.close();</stringProp>
                </BeanShellPostProcessor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if logout ok" enabled="true">
                <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="postprocess" enabled="true"/>
                <hashTree>
                  <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="fetch tomcat.debug.log" enabled="true">
                    <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                    <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                    <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.fetcher</stringProp>
                    <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="Argument">
                          <stringProp name="Argument.name"></stringProp>
                          <stringProp name="Argument.value">${COSA.HOST}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="SystemSampler.directory"></stringProp>
                  </SystemSampler>
                  <hashTree/>
                  <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="analyze tomcat.debug.log" enabled="true">
                    <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
                    <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
                    <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/debugger.log.parser</stringProp>
                    <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="SystemSampler.directory"></stringProp>
                  </SystemSampler>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="archive ana-api-chain.log" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">cp</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/tmp/ana-api-chain.log</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="" elementType="Argument">
                <stringProp name="Argument.name"></stringProp>
                <stringProp name="Argument.value">/tmp/ana-api-chain.log.${__time(YMDHMS)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory"></stringProp>
        </SystemSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="postprocess" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1395219134000</longProp>
        <longProp name="ThreadGroup.end_time">1395219134000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <SystemSampler guiclass="SystemSamplerGui" testclass="SystemSampler" testname="make ana-api-chain.stat" enabled="true">
          <boolProp name="SystemSampler.checkReturnCode">true</boolProp>
          <stringProp name="SystemSampler.expectedReturnCode">0</stringProp>
          <stringProp name="SystemSampler.command">${__P(user.dir)}/plugin/ana-api-chain.log.aggregator</stringProp>
          <elementProp name="SystemSampler.arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <elementProp name="SystemSampler.environment" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="SystemSampler.directory"></stringProp>
        </SystemSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="${__P(user.dir)}/tmp/simple.log" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">${__P(user.dir)}/tmp/simple.log</stringProp>
        <stringProp name="TestPlan.comments">same as result.log of non-gui mode ; enable this when in gui mode if need</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="${__P(user.dir)}/tmp/simple.err" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>false</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">${__P(user.dir)}/tmp/simple.err</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="DEV - View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="DEV - Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="DEV - Response Times Over Time" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">500</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
