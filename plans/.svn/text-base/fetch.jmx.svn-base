<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="2.9 r1437961">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PLAN.RUNID" elementType="Argument">
            <stringProp name="Argument.name">PLAN.RUNID</stringProp>
            <stringProp name="Argument.value">${__P(PLAN.RUNID)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PLAN.DURATION.SECOND" elementType="Argument">
            <stringProp name="Argument.name">PLAN.DURATION.SECOND</stringProp>
            <stringProp name="Argument.value">${__P(PLAN.DURATION.SECOND)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TIMER.MEAN.MS" elementType="Argument">
            <stringProp name="Argument.name">TIMER.MEAN.MS</stringProp>
            <stringProp name="Argument.value">${__P(TIMER.MEAN.MS)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="TIMER.STD.MS" elementType="Argument">
            <stringProp name="Argument.name">TIMER.STD.MS</stringProp>
            <stringProp name="Argument.value">${__P(TIMER.STD.MS)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.VERSION" elementType="Argument">
            <stringProp name="Argument.name">COSA.VERSION</stringProp>
            <stringProp name="Argument.value">${__P(COSA.VERSION,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">COSA.PROTOCOL</stringProp>
            <stringProp name="Argument.value">${__P(COSA.PROTOCOL,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.HOST" elementType="Argument">
            <stringProp name="Argument.name">COSA.HOST</stringProp>
            <stringProp name="Argument.value">${__P(COSA.HOST)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.USER.IDX.FIRST" elementType="Argument">
            <stringProp name="Argument.name">COSA.USER.IDX.FIRST</stringProp>
            <stringProp name="Argument.value">${__P(COSA.USER.IDX.FIRST)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.USER.IDX.LAST" elementType="Argument">
            <stringProp name="Argument.name">COSA.USER.IDX.LAST</stringProp>
            <stringProp name="Argument.value">${__P(COSA.USER.IDX.LAST)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.USER.PREFIX" elementType="Argument">
            <stringProp name="Argument.name">COSA.USER.PREFIX</stringProp>
            <stringProp name="Argument.value">${__P(COSA.USER.PREFIX)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.ALGO" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.ALGO</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.ALGO,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.PATH" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.PATH</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.PATH)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.WORKLOAD.METADATA.PATH" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.WORKLOAD.METADATA.PATH</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.WORKLOAD.METADATA.PATH,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.UPLOAD.FILE.WORKLOAD.METADATA.TOPN" elementType="Argument">
            <stringProp name="Argument.name">COSA.UPLOAD.FILE.WORKLOAD.METADATA.TOPN</stringProp>
            <stringProp name="Argument.value">${__P(COSA.UPLOAD.FILE.WORKLOAD.METADATA.TOPN,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.PORT" elementType="Argument">
            <stringProp name="Argument.name">COSA.PORT</stringProp>
            <stringProp name="Argument.value">${__P(COSA.PORT)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="set COSA.v?.THREADS" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="COSA.v1.THREADS" elementType="Argument">
            <stringProp name="Argument.name">COSA.v1.THREADS</stringProp>
            <stringProp name="Argument.value">${__javaScript( ${COSA.VERSION}==1 ? ${COSA.USER.IDX.LAST} - ${COSA.USER.IDX.FIRST} + 1 : 0 ; )}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="COSA.v2.THREADS" elementType="Argument">
            <stringProp name="Argument.name">COSA.v2.THREADS</stringProp>
            <stringProp name="Argument.value">${__javaScript( ${COSA.VERSION}==2 ? ${COSA.USER.IDX.LAST} - ${COSA.USER.IDX.FIRST} + 1 : 0 ; )}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <kg.apc.jmeter.config.VariablesFromCSV guiclass="kg.apc.jmeter.config.VariablesFromCSVGui" testclass="kg.apc.jmeter.config.VariablesFromCSV" testname="set file*" enabled="true">
        <collectionProp name="Arguments.arguments"/>
        <stringProp name="TestPlan.comments">Plugin help available here: http://jmeter-plugins.org/wiki/VariablesFromCSV</stringProp>
        <stringProp name="filename">${COSA.UPLOAD.FILE.WORKLOAD.METADATA.PATH}</stringProp>
        <stringProp name="variablesPrefix"></stringProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="storeSysProp">false</boolProp>
      </kg.apc.jmeter.config.VariablesFromCSV>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">true</boolProp>
      </CacheManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${COSA.HOST}</stringProp>
        <stringProp name="HTTPSampler.port">${COSA.PORT}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">${COSA.PROTOCOL}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="cosa1 - ${__machineName}" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${COSA.v1.THREADS}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${COSA.v1.THREADS}</stringProp>
        <longProp name="ThreadGroup.start_time">1382063821000</longProp>
        <longProp name="ThreadGroup.end_time">1382063821000</longProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">${PLAN.DURATION.SECOND}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.delayedStart">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="load properties" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="COSA.USER.POSTFIX" elementType="Argument">
              <stringProp name="Argument.name">COSA.USER.POSTFIX</stringProp>
              <stringProp name="Argument.value">${__P(COSA.USER.POSTFIX,)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="false">
          <stringProp name="ConstantTimer.delay">${TIMER.MEAN.MS}</stringProp>
          <stringProp name="RandomTimer.range">${TIMER.STD.MS}</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Fetch" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="admin login -&gt; add fetch user" enabled="false"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="u" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u</stringProp>
                    <stringProp name="Argument.value">admin</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pw" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pw</stringProp>
                    <stringProp name="Argument.value">admin</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/dologin.jsp</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Charset" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="2079517131">FORM.u</stringProp>
                  <stringProp name="40521585">FORM.pw</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-977969932">
                    <stringProp name="-1333098890">${COSA.ADMIN.NAME}</stringProp>
                    <stringProp name="-1331245648">${COSA.ADMIN.PASS}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.TICKET" enabled="true">
                <stringProp name="VAR">COSA.TICKET</stringProp>
                <stringProp name="JSONPATH">$.ticket</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if login ok" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="increase cosa.people.limit if need" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get prop cosa.people.limit" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/restful/services/properties/get/cosa.people.limit</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.cosa.people.limit" enabled="true">
                    <stringProp name="filename"></stringProp>
                    <stringProp name="parameters"></stringProp>
                    <stringProp name="script">eval(&apos;var ResponseString = &apos; + prev.getResponseDataAsString());
vars.put(&quot;COSA.cosa.people.limit&quot;, ResponseString);
</stringProp>
                    <stringProp name="scriptLanguage">javascript</stringProp>
                  </BSFPostProcessor>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if limit &lt; loop" enabled="true">
                  <stringProp name="IfController.condition">${COSA.cosa.people.limit} &lt; ${__javaScript( ${COSA.USER.IDX.LAST} - ${COSA.USER.IDX.FIRST} + 1 )}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="set prop cosa.people.limit" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
	&quot;key&quot;:&quot;${JSON.key}&quot;,&#xd;
	&quot;value&quot;:&quot;${JSON.value}&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/properties/set</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1192445863">JSON.key</stringProp>
                        <stringProp name="825824491">JSON.value</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1683674934">
                          <stringProp name="-1169728176">cosa.people.limit</stringProp>
                          <stringProp name="-2094283307">${__javaScript( ${COSA.USER.IDX.LAST} - ${COSA.USER.IDX.FIRST} + 1 )}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="counter" enabled="true">
                  <stringProp name="CounterConfig.start">${COSA.USER.IDX.FIRST}</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">N</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="re-login if ticket timeout" enabled="false"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verify ticket" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/auth/verify?ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">200 valid | 401 invalid</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="928949649">
                          <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if invalid ticket" enabled="true">
                    <stringProp name="IfController.condition">! ${JMeterThread.last_sample_ok}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin re-login" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="u" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">u</stringProp>
                            <stringProp name="Argument.value">${FORM.u}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="pw" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">pw</stringProp>
                            <stringProp name="Argument.value">${FORM.pw}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/dologin.jsp</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="2079517131">FORM.u</stringProp>
                          <stringProp name="40521585">FORM.pw</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-977969932">
                            <stringProp name="-1333098890">${COSA.ADMIN.NAME}</stringProp>
                            <stringProp name="-1331245648">${COSA.ADMIN.PASS}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.TICKET" enabled="true">
                        <stringProp name="VAR">COSA.TICKET</stringProp>
                        <stringProp name="JSONPATH">$.ticket</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if ticket ok" enabled="true">
                  <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add Fetch user Iris" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
	&quot;userName&quot;:&quot;${JSON.userName}&quot;,&#xd;
	&quot;firstName&quot;:&quot;${JSON.firstName}&quot;,&#xd;
	&quot;lastName&quot;:&quot;${JSON.lastName}&quot;,&#xd;
	&quot;email&quot;:&quot;${JSON.email}&quot;,&#xd;
	&quot;password&quot;:&quot;${JSON.password}&quot;,&#xd;
	&quot;quota&quot;:${JSON.quota},&#xd;
	&quot;groups&quot;:[${JSON.groups}],&#xd;
	&quot;localization&quot;:&quot;${JSON.localization}&quot;,&#xd;
	&quot;shareDpxStatus&quot;:${JSON.shareDpxStatus},&#xd;
	&quot;sharePrivateStatus&quot;:${JSON.sharePrivateStatus},&#xd;
	&quot;fileTimeExpired&quot;:&quot;${JSON.fileTimeExpired}&quot;,&#xd;
	&quot;fileUsedExpired&quot;:&quot;${JSON.fileUsedExpired}&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/people/create?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Charset" elementType="Header">
                          <stringProp name="Header.name">Accept-Charset</stringProp>
                          <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}/manage/managerusers.jsp</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="928949649">
                          <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="1708330812">JSON.userName</stringProp>
                        <stringProp name="1228218325">JSON.firstName</stringProp>
                        <stringProp name="515397767">JSON.lastName</stringProp>
                        <stringProp name="810471190">JSON.email</stringProp>
                        <stringProp name="-1102983967">JSON.password</stringProp>
                        <stringProp name="821805554">JSON.quota</stringProp>
                        <stringProp name="-582892134">JSON.groups</stringProp>
                        <stringProp name="-1428994593">JSON.localization</stringProp>
                        <stringProp name="480477477">JSON.shareDpxStatus</stringProp>
                        <stringProp name="2055981180">JSON.sharePrivateStatus</stringProp>
                        <stringProp name="-1055507594">JSON.fileTimeExpired</stringProp>
                        <stringProp name="-690703226">JSON.fileUsedExpired</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-1317937805">
                          <stringProp name="3240979">iris</stringProp>
                          <stringProp name="3240979">iris</stringProp>
                          <stringProp name="-1156489889">jmeter</stringProp>
                          <stringProp name="637178336">mail@jmeter.cosa</stringProp>
                          <stringProp name="3240979">iris</stringProp>
                          <stringProp name="1731998115">21474836480</stringProp>
                          <stringProp name="0"></stringProp>
                          <stringProp name="115813762">zh-TW</stringProp>
                          <stringProp name="97196323">false</stringProp>
                          <stringProp name="3569038">true</stringProp>
                          <stringProp name="1755">72</stringProp>
                          <stringProp name="48625">100</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="add Fetch user ccyang" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
	&quot;userName&quot;:&quot;${JSON.userName}&quot;,&#xd;
	&quot;firstName&quot;:&quot;${JSON.firstName}&quot;,&#xd;
	&quot;lastName&quot;:&quot;${JSON.lastName}&quot;,&#xd;
	&quot;email&quot;:&quot;${JSON.email}&quot;,&#xd;
	&quot;password&quot;:&quot;${JSON.password}&quot;,&#xd;
	&quot;quota&quot;:${JSON.quota},&#xd;
	&quot;groups&quot;:[${JSON.groups}],&#xd;
	&quot;localization&quot;:&quot;${JSON.localization}&quot;,&#xd;
	&quot;shareDpxStatus&quot;:${JSON.shareDpxStatus},&#xd;
	&quot;sharePrivateStatus&quot;:${JSON.sharePrivateStatus},&#xd;
	&quot;fileTimeExpired&quot;:&quot;${JSON.fileTimeExpired}&quot;,&#xd;
	&quot;fileUsedExpired&quot;:&quot;${JSON.fileUsedExpired}&quot;&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/people/create?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Charset" elementType="Header">
                          <stringProp name="Header.name">Accept-Charset</stringProp>
                          <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}/manage/managerusers.jsp</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="928949649">
                          <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="1708330812">JSON.userName</stringProp>
                        <stringProp name="1228218325">JSON.firstName</stringProp>
                        <stringProp name="515397767">JSON.lastName</stringProp>
                        <stringProp name="810471190">JSON.email</stringProp>
                        <stringProp name="-1102983967">JSON.password</stringProp>
                        <stringProp name="821805554">JSON.quota</stringProp>
                        <stringProp name="-582892134">JSON.groups</stringProp>
                        <stringProp name="-1428994593">JSON.localization</stringProp>
                        <stringProp name="480477477">JSON.shareDpxStatus</stringProp>
                        <stringProp name="2055981180">JSON.sharePrivateStatus</stringProp>
                        <stringProp name="-1055507594">JSON.fileTimeExpired</stringProp>
                        <stringProp name="-690703226">JSON.fileUsedExpired</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1533173407">
                          <stringProp name="-1365551327">ccyang</stringProp>
                          <stringProp name="3168">cc</stringProp>
                          <stringProp name="2748129">Yang</stringProp>
                          <stringProp name="637178336">mail@jmeter.cosa</stringProp>
                          <stringProp name="-1365551327">ccyang</stringProp>
                          <stringProp name="1731998115">21474836480</stringProp>
                          <stringProp name="0"></stringProp>
                          <stringProp name="115813762">zh-TW</stringProp>
                          <stringProp name="97196323">false</stringProp>
                          <stringProp name="3569038">true</stringProp>
                          <stringProp name="1755">72</stringProp>
                          <stringProp name="48625">100</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Fetch user login -&gt; user logout" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="go homepage" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree/>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if homepage ok" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fetch user Iris login on Web" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="u" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">u</stringProp>
                      <stringProp name="Argument.value">iris</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="pw" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">pw</stringProp>
                      <stringProp name="Argument.value">iris</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/dologin.jsp</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Charset" elementType="Header">
                      <stringProp name="Header.name">Accept-Charset</stringProp>
                      <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.USER.FIRST.TICKET" enabled="true">
                  <stringProp name="VAR">COSA.USER.FIRST.TICKET</stringProp>
                  <stringProp name="JSONPATH">$.ticket</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fetch user ccyang login on Web" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="u" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">u</stringProp>
                      <stringProp name="Argument.value">ccyang</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="pw" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">pw</stringProp>
                      <stringProp name="Argument.value">ccyang</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/dologin.jsp</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Charset" elementType="Header">
                      <stringProp name="Header.name">Accept-Charset</stringProp>
                      <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.USER.FIRST.TICKET" enabled="true">
                  <stringProp name="VAR">COSA.USER.SECOND.TICKET</stringProp>
                  <stringProp name="JSONPATH">$.ticket</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
              </hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if login ok" enabled="true">
                <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller - Delete File and Folder" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">3</stringProp>
                </LoopController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get Iris profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/person/${QUERY.user}?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="302263633">QUERY.user</stringProp>
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-1984885888">
                          <stringProp name="3240979">iris</stringProp>
                          <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.ROOTUID" enabled="true">
                      <stringProp name="VAR">COSA.ROOTUID</stringProp>
                      <stringProp name="JSONPATH">$.homeFolderNodeRef</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="set COSA.ROOTUID" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">COSA.ROOTUID</stringProp>
                      <stringProp name="RegexExtractor.regex">([^/]*)$</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">variable</stringProp>
                      <stringProp name="Scope.variable">COSA.ROOTUID</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get ccyang profile" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/person/${QUERY.user}?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="302263633">QUERY.user</stringProp>
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="932054087">
                          <stringProp name="-1365551327">ccyang</stringProp>
                          <stringProp name="147756957">${COSA.USER.SECOND.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.ROOTUID_ccyang" enabled="true">
                      <stringProp name="VAR">COSA.ROOTUID_ccyang</stringProp>
                      <stringProp name="JSONPATH">$.homeFolderNodeRef</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="set COSA.ROOTUID_ccyang" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">COSA.ROOTUID_ccyang</stringProp>
                      <stringProp name="RegexExtractor.regex">([^/]*)$</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default"></stringProp>
                      <stringProp name="RegexExtractor.match_number">1</stringProp>
                      <stringProp name="Sample.scope">variable</stringProp>
                      <stringProp name="Scope.variable">COSA.ROOTUID</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Folder" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;nodeUUID&quot; : ${QUERY.folder.uid},&#xd;
    &quot;nodeName&quot; : &quot;IrisA&quot;,&#xd;
    &quot;isRoot&quot; : true,&#xd;
    &quot;emptyFlag&quot; : &quot;false&quot;&#xd;
}&#xd;
</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/doclib/webcreatefolder?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Charset" elementType="Header">
                          <stringProp name="Header.name">Accept-Charset</stringProp>
                          <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                        <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-1653129535">
                          <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                          <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="false">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="286229606">FORM.file</stringProp>
                        <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1943647759">
                          <stringProp name="1305458528">${LOCAL.FILE.PATH}</stringProp>
                          <stringProp name="86836">Web</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                      <stringProp name="VAR">COSA.OBJUID</stringProp>
                      <stringProp name="JSONPATH">$.uuid</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.FOLDER_A_UUID" enabled="true">
                      <stringProp name="VAR">COSA.FOLDER_A_UUID</stringProp>
                      <stringProp name="JSONPATH">$.uuid</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.FOLDER_A_NAME" enabled="true">
                      <stringProp name="VAR">COSA.FOLDER_A_NAME</stringProp>
                      <stringProp name="JSONPATH">$.name</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Folder" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;nodeUUID&quot; : ${QUERY.folder.uid},&#xd;
    &quot;nodeName&quot; : &quot;IrisB&quot;,&#xd;
    &quot;isRoot&quot; : true,&#xd;
    &quot;emptyFlag&quot; : &quot;false&quot;&#xd;
}&#xd;
</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/doclib/webcreatefolder?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Charset" elementType="Header">
                          <stringProp name="Header.name">Accept-Charset</stringProp>
                          <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                        <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-1653129535">
                          <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                          <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="false">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="286229606">FORM.file</stringProp>
                        <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1943647759">
                          <stringProp name="1305458528">${LOCAL.FILE.PATH}</stringProp>
                          <stringProp name="86836">Web</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                      <stringProp name="VAR">COSA.OBJUID</stringProp>
                      <stringProp name="JSONPATH">$.uuid</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.FOLDER_B_UUID" enabled="true">
                      <stringProp name="VAR">COSA.FOLDER_B_UUID</stringProp>
                      <stringProp name="JSONPATH">$.uuid</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.FOLDER_B_NAME" enabled="true">
                      <stringProp name="VAR">COSA.FOLDER_B_NAME</stringProp>
                      <stringProp name="JSONPATH">$.name</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Folder" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
    &quot;nodeUUID&quot; : ${QUERY.folder.uid},&#xd;
    &quot;nodeName&quot; : &quot;IrisC&quot;,&#xd;
    &quot;isRoot&quot; : true,&#xd;
    &quot;emptyFlag&quot; : &quot;false&quot;&#xd;
}&#xd;
</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/doclib/webcreatefolder?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Charset" elementType="Header">
                          <stringProp name="Header.name">Accept-Charset</stringProp>
                          <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                        <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-1653129535">
                          <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                          <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="false">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="286229606">FORM.file</stringProp>
                        <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1943647759">
                          <stringProp name="1305458528">${LOCAL.FILE.PATH}</stringProp>
                          <stringProp name="86836">Web</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                      <stringProp name="VAR">COSA.OBJUID</stringProp>
                      <stringProp name="JSONPATH">$.uuid</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.FOLDER_C_UUID" enabled="true">
                      <stringProp name="VAR">COSA.FOLDER_C_UUID</stringProp>
                      <stringProp name="JSONPATH">$.uuid</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Share Folder" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">5</stringProp>
                  </LoopController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Share Folder" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;obj_uuid&quot;: &quot;${COSA.FOLDER_A_UUID}&quot;,&#xd;
    &quot;obj_type&quot;: true,&#xd;
    &quot;groups&quot;: [],&#xd;
    &quot;users&quot;: [&#xd;
        {&#xd;
            &quot;uid&quot;: &quot;ccyang&quot;,&#xd;
            &quot;sg_acl&quot;: 3&#xd;
        }&#xd;
    ],&#xd;
    &quot;async&quot;: true,&#xd;
    &quot;timeout&quot;: 30000,&#xd;
    &quot;hostName&quot;: &quot;${COSA.HOST}&quot;,&#xd;
    &quot;uid_from&quot;: &quot;iris&quot;,&#xd;
    &quot;fileName&quot;: &quot;${COSA.FOLDER_A_NAME}&quot;,&#xd;
    &quot;locale&quot;: &quot;zh-TW&quot;&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/share/sharedObj/update?ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1653129535">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Agree Share Folder" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;srList&quot;: [&#xd;
        {&#xd;
            &quot;uid&quot;: &quot;ccyang&quot;,&#xd;
            &quot;sg_id&quot;: &quot;27&quot;,&#xd;
            &quot;sr_confirm&quot;: &quot;ACCEPT&quot;,&#xd;
            &quot;index&quot;: &quot;1&quot;,&#xd;
            &quot;fileName&quot;: &quot;IrisA&quot;,&#xd;
            &quot;obj_uuid&quot;: &quot;${COSA.FOLDER_A_UUID}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;homeuuid&quot;: &quot;${COSA.ROOTUID_ccyang}&quot;,&#xd;
    &quot;uid&quot;: &quot;ccyang&quot;&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/share/sharedRequest/update?ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1653129535">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reject Share Folder" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;srList&quot;: [&#xd;
        {&#xd;
            &quot;uid&quot;: &quot;ccyang&quot;,&#xd;
            &quot;sg_id&quot;: &quot;27&quot;,&#xd;
            &quot;sr_confirm&quot;: &quot;REJECT&quot;,&#xd;
            &quot;index&quot;: &quot;1&quot;,&#xd;
            &quot;fileName&quot;: &quot;IrisA&quot;,&#xd;
            &quot;obj_uuid&quot;: &quot;${COSA.FOLDER_A_UUID}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;homeuuid&quot;: &quot;${COSA.ROOTUID_ccyang}&quot;,&#xd;
    &quot;uid&quot;: &quot;ccyang&quot;&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/share/sharedRequest/update?ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1653129535">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cancel Share Folder" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;obj_uuid&quot;: &quot;${COSA.FOLDER_A_UUID}&quot;,&#xd;
    &quot;obj_type&quot;: true,&#xd;
    &quot;groups&quot;: [],&#xd;
    &quot;users&quot;: [],&#xd;
    &quot;async&quot;: true,&#xd;
    &quot;timeout&quot;: 30000,&#xd;
    &quot;hostName&quot;: &quot;${COSA.HOST}&quot;,&#xd;
    &quot;uid_from&quot;: &quot;iris&quot;,&#xd;
    &quot;fileName&quot;: &quot;${COSA.FOLDER_A_NAME}&quot;,&#xd;
    &quot;locale&quot;: &quot;zh-TW&quot;&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/share/sharedObj/update?ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1653129535">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 510" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="-1239686937">{&quot;statuscode&quot;:510}</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">8</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Upload file" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          <stringProp name="Argument.name">uploadFileDesc</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                    <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                      <collectionProp name="HTTPFileArgs.files">
                        <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                          <stringProp name="File.path">${FORM.file}</stringProp>
                          <stringProp name="File.paramname">file</stringProp>
                          <stringProp name="File.mimetype"></stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                        <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1002149651">
                          <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                          <stringProp name="1235791440">${COSA.FOLDER_A_UUID}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="286229606">FORM.file</stringProp>
                        <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-140904710">
                          <stringProp name="-802353084">/root/jmeter-working-dir/workloads/Fetch/TestFile</stringProp>
                          <stringProp name="86836">Web</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                      <stringProp name="VAR">COSA.FILE.OBJUID</stringProp>
                      <stringProp name="JSONPATH">$.uuid</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                    <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJ.NAME" enabled="true">
                      <stringProp name="VAR">COSA.FILE.OBJ.NAME</stringProp>
                      <stringProp name="JSONPATH">$.name</stringProp>
                    </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                    <hashTree/>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Upload and Revert File" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">5</stringProp>
                  </LoopController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Upload file" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="uploadFileDesc" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">${FORM.uploadFileDesc}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            <stringProp name="Argument.name">uploadFileDesc</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/doclib/upload/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                      <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                        <collectionProp name="HTTPFileArgs.files">
                          <elementProp name="${FORM.file}" elementType="HTTPFileArg">
                            <stringProp name="File.path">${FORM.file}</stringProp>
                            <stringProp name="File.paramname">file</stringProp>
                            <stringProp name="File.mimetype"></stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="1002149651">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="1235791440">${COSA.FOLDER_A_UUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="286229606">FORM.file</stringProp>
                          <stringProp name="1856478648">FORM.uploadFileDesc</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-140904710">
                            <stringProp name="-802353084">/root/jmeter-working-dir/workloads/Fetch/TestFile</stringProp>
                            <stringProp name="86836">Web</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="true">
                        <stringProp name="VAR">COSA.FILE.OBJUID</stringProp>
                        <stringProp name="JSONPATH">$.uuid</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJ.NAME" enabled="true">
                        <stringProp name="VAR">COSA.FILE.OBJ.NAME</stringProp>
                        <stringProp name="JSONPATH">$.name</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Revert file" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;nodeRef&quot;: &quot;workspace://SpacesStore/${QUERY.file.uuid}&quot;,&#xd;
    &quot;version&quot;: &quot;1.0&quot;,&#xd;
    &quot;majorVersion&quot;: false,&#xd;
    &quot;description&quot;: &quot;Revert from version 1.0&quot;,&#xd;
    &quot;name&quot;: &quot;${QUERY.name}&quot;,&#xd;
    &quot;isRoot&quot;: false&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/node/revertversion?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-2066348249">QUERY.file.uuid</stringProp>
                          <stringProp name="302038033">QUERY.name</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1730474899">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="-336907537">${COSA.FILE.OBJUID}</stringProp>
                            <stringProp name="1537318918">${COSA.FILE.OBJ.NAME}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json success true" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="-1286648913">{&quot;success&quot; : true}</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">8</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                        <stringProp name="VAR">COSA.FILE.OBJUID</stringProp>
                        <stringProp name="JSONPATH">$.uuid</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Move File" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">5</stringProp>
                  </LoopController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Move file" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
   &quot;nodeRefs&quot;: [&quot;workspace://SpacesStore/${COSA.FILE.OBJUID}&quot;]&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/node/fancymoveto/iris/workspace/SpacesStore/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-942434774">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="2123295121">${COSA.FOLDER_B_UUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                        <stringProp name="VAR">COSA.FILE.OBJUID</stringProp>
                        <stringProp name="JSONPATH">$.uuid</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Move file" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
   &quot;nodeRefs&quot;: [&quot;workspace://SpacesStore/${COSA.FILE.OBJUID}&quot;]&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/node/fancymoveto/iris/workspace/SpacesStore/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-942434774">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="2123295121">${COSA.FOLDER_B_UUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                        <stringProp name="VAR">COSA.FILE.OBJUID</stringProp>
                        <stringProp name="JSONPATH">$.uuid</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Move Folder" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">5</stringProp>
                  </LoopController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Move folder" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
   &quot;nodeRefs&quot;: [&quot;workspace://SpacesStore/${COSA.FOLDER_C_UUID}&quot;]&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/node/fancymoveto/iris/workspace/SpacesStore/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="1002149651">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="1235791440">${COSA.FOLDER_A_UUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                        <stringProp name="VAR">COSA.FILE.OBJUID</stringProp>
                        <stringProp name="JSONPATH">$.uuid</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Move folder" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
   &quot;nodeRefs&quot;: [&quot;workspace://SpacesStore/${COSA.FOLDER_C_UUID}&quot;]&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/node/fancymoveto/iris/workspace/SpacesStore/${QUERY.folder.uid}?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-942434774">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="2123295121">${COSA.FOLDER_B_UUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.OBJUID" enabled="false">
                        <stringProp name="VAR">COSA.FILE.OBJUID</stringProp>
                        <stringProp name="JSONPATH">$.uuid</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Delete File and Recover File" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">5</stringProp>
                  </LoopController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete File" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="1313497274">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="818845227">JSON.nodes</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1475799071">
                            <stringProp name="-336907537">${COSA.FILE.OBJUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="-1239777271">{&quot;statuscode&quot;:200}</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">8</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Recover File" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;revertObjs&quot;: [&#xd;
        {&#xd;
            &quot;HomeUUID&quot;: &quot;${JSON.Folder.UUID}&quot;,&#xd;
            &quot;ObjectUUID&quot;: &quot;${JSON.File.UUID}&quot;,&#xd;
            &quot;ObjectName&quot;: &quot;${JSON.name}&quot;&#xd;
        }&#xd;
    ]&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/recyclebin/multiplerevert?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="302038033">QUERY.name</stringProp>
                          <stringProp name="-1323802411">QUERY.Folder.UUID</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-23017632">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="1537318918">${COSA.FILE.OBJ.NAME}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="1736872775">JSON.File.UUID</stringProp>
                          <stringProp name="1688969169">JSON.name</stringProp>
                          <stringProp name="2128200981">JSON.Folder.UUID</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-425836421">
                            <stringProp name="-336907537">${COSA.FILE.OBJUID}</stringProp>
                            <stringProp name="1792943445">${QUERY.name}</stringProp>
                            <stringProp name="-711796897">${QUERY.Folder.UUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Folder" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1313497274">
                          <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="818845227">JSON.nodes</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="-1061560148">
                          <stringProp name="1235791440">${COSA.FOLDER_A_UUID}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1239777271">{&quot;statuscode&quot;:200}</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Folder" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{&#xd;
	&quot;nodes&quot;:[${JSON.nodes}]&#xd;
}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="content-type json" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1313497274">
                          <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="json body parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="818845227">JSON.nodes</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1288822723">
                          <stringProp name="2123295121">${COSA.FOLDER_B_UUID}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1239777271">{&quot;statuscode&quot;:200}</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">8</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="Delete Home Folder and File" enabled="true">
                    <stringProp name="ForeachController.inputVal"></stringProp>
                    <stringProp name="ForeachController.returnVal"></stringProp>
                    <boolProp name="ForeachController.useSeparator">true</boolProp>
                  </ForeachController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get User Home List" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;uuid&quot;: &quot;${COSA.ROOTUID}&quot;,&#xd;
    &quot;root&quot;: &quot;true&quot;,&#xd;
    &quot;pagesize&quot;: 50,&#xd;
    &quot;pageindex&quot;: 0,&#xd;
    &quot;sort&quot;: &quot;time&quot;,&#xd;
    &quot;asc&quot;: false,&#xd;
    &quot;tree&quot;: false&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/repository/nodesrender/paging?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1653129535">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <BSFPostProcessor guiclass="TestBeanGUI" testclass="BSFPostProcessor" testname="set COSA.User.Home.List" enabled="true">
                        <stringProp name="scriptLanguage">javascript</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="script">eval(&apos;var SearchResponse = &apos; + prev.getResponseDataAsString());

var DelList=&quot;&quot;;
var HomeList = new Array();

for (var i = 0 ; i&lt;SearchResponse.children.length ; i++) {
 cc = SearchResponse.children[i].uuid;
log.info(&quot;uuid = &quot;+cc);

HomeList.push(cc);
}

log.info(HomeList);


vars.put(&quot;COSA.User.Home.List&quot;, HomeList);</stringProp>
                      </BSFPostProcessor>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete User Home List" enabled="true">
                      <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.value">{&#xd;
    &quot;nodes&quot;: [${COSA.User.Home.List}]&#xd;
}&#xd;
</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/restful/services/node/delete?alf_ticket=${QUERY.ticket}</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="-1620352238">QUERY.ticket</stringProp>
                          <stringProp name="-1204852778">QUERY.folder.uid</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-1653129535">
                            <stringProp name="-2055946067">${COSA.USER.FIRST.TICKET}</stringProp>
                            <stringProp name="174203500">${COSA.ROOTUID}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="remote wide off user login on android agent II" enabled="false">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{ &#xd;
    &quot;username&quot;:&quot;iris&quot;,&#xd;
    &quot;password&quot;:&quot;iris&quot;,&#xd;
    &quot;source&quot;:3,&#xd;
    &quot;pn&quot;:6,&#xd;
    &quot;devicetype&quot;:&quot;Android&quot;,&#xd;
    &quot;devicename&quot;:&quot;ASUS PadFone Infinity&quot;,&#xd;
    &quot;deviceuuid&quot;:&quot;${AgentUUID}&quot;&#xd;
}&#xd;
</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/restful/services/auth/login</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Charset" elementType="Header">
                      <stringProp name="Header.name">Accept-Charset</stringProp>
                      <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="set Device_UUID" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="302924832">AgentUUID</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="270662609">
                      <stringProp name="-693977968">79BC5112-C3DD-45B2-B2AC-D4427A8293B7</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set Agent.TICKET" enabled="true">
                  <stringProp name="VAR">Agent.TICKET</stringProp>
                  <stringProp name="JSONPATH">$.ticket</stringProp>
                </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="admin login -&gt; remove Fetch off user" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin login" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="u" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">u</stringProp>
                    <stringProp name="Argument.value">admin</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pw" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pw</stringProp>
                    <stringProp name="Argument.value">admin</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/dologin.jsp</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Charset" elementType="Header">
                    <stringProp name="Header.name">Accept-Charset</stringProp>
                    <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                <collectionProp name="UserParameters.names">
                  <stringProp name="2079517131">FORM.u</stringProp>
                  <stringProp name="40521585">FORM.pw</stringProp>
                </collectionProp>
                <collectionProp name="UserParameters.thread_values">
                  <collectionProp name="-977969932">
                    <stringProp name="-1333098890">${COSA.ADMIN.NAME}</stringProp>
                    <stringProp name="-1331245648">${COSA.ADMIN.PASS}</stringProp>
                  </collectionProp>
                </collectionProp>
                <boolProp name="UserParameters.per_iteration">false</boolProp>
              </UserParameters>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.TICKET" enabled="true">
                <stringProp name="VAR">COSA.TICKET</stringProp>
                <stringProp name="JSONPATH">$.ticket</stringProp>
              </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if login ok" enabled="true">
              <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="counter" enabled="true">
                  <stringProp name="CounterConfig.start">${COSA.USER.IDX.FIRST}</stringProp>
                  <stringProp name="CounterConfig.end"></stringProp>
                  <stringProp name="CounterConfig.incr">1</stringProp>
                  <stringProp name="CounterConfig.name">N</stringProp>
                  <stringProp name="CounterConfig.format"></stringProp>
                  <boolProp name="CounterConfig.per_user">false</boolProp>
                </CounterConfig>
                <hashTree/>
                <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="re-login if ticket timeout" enabled="false"/>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="verify ticket" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/auth/verify?ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="TestPlan.comments">200 valid | 401 invalid</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="928949649">
                          <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if invalid ticket" enabled="true">
                    <stringProp name="IfController.condition">! ${JMeterThread.last_sample_ok}</stringProp>
                    <boolProp name="IfController.evaluateAll">false</boolProp>
                  </IfController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="admin re-login" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="u" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">u</stringProp>
                            <stringProp name="Argument.value">${FORM.u}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="pw" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">pw</stringProp>
                            <stringProp name="Argument.value">${FORM.pw}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="HTTPSampler.protocol"></stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/dologin.jsp</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <boolProp name="HTTPSampler.monitor">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Charset" elementType="Header">
                            <stringProp name="Header.name">Accept-Charset</stringProp>
                            <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://${COSA.HOST}/login.jsp</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="form body parameters" enabled="true">
                        <collectionProp name="UserParameters.names">
                          <stringProp name="2079517131">FORM.u</stringProp>
                          <stringProp name="40521585">FORM.pw</stringProp>
                        </collectionProp>
                        <collectionProp name="UserParameters.thread_values">
                          <collectionProp name="-977969932">
                            <stringProp name="-1333098890">${COSA.ADMIN.NAME}</stringProp>
                            <stringProp name="-1331245648">${COSA.ADMIN.PASS}</stringProp>
                          </collectionProp>
                        </collectionProp>
                        <boolProp name="UserParameters.per_iteration">false</boolProp>
                      </UserParameters>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">2</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                      <com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor guiclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.gui.JSONPathExtractorGui" testclass="com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor" testname="set COSA.TICKET" enabled="true">
                        <stringProp name="VAR">COSA.TICKET</stringProp>
                        <stringProp name="JSONPATH">$.ticket</stringProp>
                      </com.atlantbh.jmeter.plugins.jsonutils.jsonpathextractor.JSONPathExtractor>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="if ticket ok" enabled="true">
                  <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="remove Fetch user IRIS" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/people/${QUERY.user.name}/delete?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Charset" elementType="Header">
                          <stringProp name="Header.name">Accept-Charset</stringProp>
                          <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}/manage/managerusers.jsp</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                        <stringProp name="-410767096">QUERY.user.name</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="1674309867">
                          <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                          <stringProp name="3240979">iris</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="remove Fetch user ccyang" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="使用者自訂變數" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/restful/services/people/${QUERY.user.name}/delete?alf_ticket=${QUERY.ticket}</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <boolProp name="HTTPSampler.monitor">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP header manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-TW,zh;q=0.8,en-US;q=0.6,en;q=0.4</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.64 Safari/537.31</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Charset" elementType="Header">
                          <stringProp name="Header.name">Accept-Charset</stringProp>
                          <stringProp name="Header.value">Big5,utf-8;q=0.7,*;q=0.3</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://${COSA.HOST}/manage/managerusers.jsp</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip,deflate,sdch</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="query string parameters" enabled="true">
                      <collectionProp name="UserParameters.names">
                        <stringProp name="-1620352238">QUERY.ticket</stringProp>
                        <stringProp name="-410767096">QUERY.user.name</stringProp>
                      </collectionProp>
                      <collectionProp name="UserParameters.thread_values">
                        <collectionProp name="799729570">
                          <stringProp name="-1312007404">${COSA.TICKET}</stringProp>
                          <stringProp name="-1365551327">ccyang</stringProp>
                        </collectionProp>
                      </collectionProp>
                      <boolProp name="UserParameters.per_iteration">false</boolProp>
                    </UserParameters>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="json statuscode 200" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="175355001">&quot;statuscode&quot;:200</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">2</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Log - CSV" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(user.dir)}/logs/${__TestPlanName}/${PLAN.RUNID}/weblog.csv.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Automation Log - CSV" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>false</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">/tmp/auto-check-func.log</stringProp>
        </ResultCollector>
        <hashTree/>
        <kg.apc.jmeter.reporters.FlexibleFileWriter guiclass="kg.apc.jmeter.reporters.FlexibleFileWriterGui" testclass="kg.apc.jmeter.reporters.FlexibleFileWriter" testname="Log for Jenkins" enabled="true">
          <stringProp name="filename">/tmp/jenkins.jtl</stringProp>
          <stringProp name="columns">endTime|,|responseTime|,|latency|,|responseCode|,boolean|isSuccsessful|,|sampleLabel|\r\n</stringProp>
          <boolProp name="overwrite">true</boolProp>
          <stringProp name="header">timestamp,elapsed,latency,responseCode,success,URL
</stringProp>
          <stringProp name="footer"></stringProp>
        </kg.apc.jmeter.reporters.FlexibleFileWriter>
        <hashTree/>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Error Log - XML" enabled="false">
          <boolProp name="ResultCollector.error_logging">true</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>false</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <url>true</url>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename">${__P(user.dir)}/logs/${__TestPlanName}/${PLAN.RUNID}/weblog.xml.jtl</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">/tmp/auto-check-func.errorlog</stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>false</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
